package seedlings {	import flash.display.MovieClip;	import flash.events.Event;		public class Energybar extends MovieClip {		private var total:int 		private var value:int		private var time:Number = new Date().getTime()		//Defines how long it takes to gain one XP, in this case 1 minute		private var ticktime:int = 60*1000-1				public function Energybar(total:int, value:int, time:Number) {			//Set total energy we can have (hardcoded to 6 in Game.as)			this.total = total;			//Set current value			this.value = value;						//Award energy gained while the game was closed			var left:Number = ticktime - (new Date().getTime() - time);			while(left < 0){				if(this.value<total){					this.value ++					left += ticktime					time += ticktime				}else{					break;				}			}						//Set time to reminder			this.time = time			//Render bar			render();			//Hide timeleft text			timeleft.visible = false			//Add enter frame handler			addEventListener(Event.ENTER_FRAME, handleEnterFrame);		}				public function useenergy():Boolean{			//Use energy			if(value > 0){				value --;				time = new Date().getTime();				render();				return true			}			return false;		}				//Give full energy to user		public function giveFull():void{			value = total;			render();		}		//Get energy		public function get energy():int{			return value		}				//Get current timer		public function get timer():Number{			return time;		}				//Render bar		private function render():void{			bar.setProgress(value/total)		}								private function handleEnterFrame(e:Event):void{			//If the user does not have full energy			if(total != value){				//Show timeleft text				timeleft.visible = true;				//Calculate time left to the user gets an energy point				var left:Number = ticktime - (new Date().getTime() - time);				if(left <= 0){					value ++;					time = value == total ? 0 : new Date().getTime();					render();					return				}				//Render time left text				setTime(left);			}else{				//If we have full energy hide time left text				timeleft.visible = false			}		}				private function setTime(n:Number):void{			//Calculate minutes			var mins:int = n/1000/60			//Calculate secounds			var secs:int = n/1000 - (mins*60)			//Render text			timeleft.text = mins + ":" + prettyNumber(secs);		}				private function prettyNumber(n:int):String{			//Ensure that secounds are always shown with two decimals			return n<10 ? "0" + n : n.toString()		}			}}