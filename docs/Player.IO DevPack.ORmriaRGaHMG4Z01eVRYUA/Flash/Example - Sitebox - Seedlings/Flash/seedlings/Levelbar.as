package seedlings {	import flash.display.MovieClip;	import flash.events.Event;		public class Levelbar extends MovieClip {		private var total:int 		private var value:int		private var experiance:int = 0;		private var currentLevel:int = 0;		private var levelUp:Function		//Declare XP offsets for levels. Ends with 0xffffffff to make it pratically impossible to ever get past the last level		public static var levels:Array = [50,100,200,300,400,500,600,700,800,900,1000,2000,5000,10000,20000, 30000,40000,50000,100000,0xffffffff]				public function Levelbar(xp:int, levelUp:Function) {			//Define levelup callback			this.levelUp = levelUp			//Set experiance			experiance = xp;			//Calculate the current level			currentLevel = generateLevel(xp);			//Refresh grapical reprecentation			render();		}				public function giveXP(xp:int){			//Add new xp to xp			experiance+=xp;			//Generate new level			var newLevel:int = generateLevel(experiance);			if(newLevel != currentLevel){				//If we gained a new level, call levelUp				levelUp(newLevel);			}			//Set the current level to the new level			currentLevel = newLevel					}				//Get level		public function get level():int{			return currentLevel		}				//Get XP		public function get xp():int{			return experiance		}						//Return level from XP		public static function GetLevel(xp:int):int{			var level:int = 0;			while(xp >= 0){				xp -= levels[level++]			}			return level;		}				//Visually show current level		private function generateLevel(xp:int):int{			xptext.text = xp + "xp";			var level:int = 0;			while(xp >= 0){				xp -= levels[level++]			}			total = levels[level-1]			value = total+xp			render()						star.level.text = (level)									return level;		}				private function render():void{			bar.setProgress(value/total)		}			}}